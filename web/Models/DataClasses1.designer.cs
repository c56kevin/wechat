#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace web.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="黑龙江省农村精神文明调查问卷")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertAnsLog(AnsLog instance);
    partial void UpdateAnsLog(AnsLog instance);
    partial void DeleteAnsLog(AnsLog instance);
    partial void Insertdiqu_quXian(diqu_quXian instance);
    partial void Updatediqu_quXian(diqu_quXian instance);
    partial void Deletediqu_quXian(diqu_quXian instance);
    partial void Insertdiqu_chengShi(diqu_chengShi instance);
    partial void Updatediqu_chengShi(diqu_chengShi instance);
    partial void Deletediqu_chengShi(diqu_chengShi instance);
    partial void InsertAnsLog_2015(AnsLog_2015 instance);
    partial void UpdateAnsLog_2015(AnsLog_2015 instance);
    partial void DeleteAnsLog_2015(AnsLog_2015 instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["黑龙江省农村精神文明调查问卷ConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AnsLog> AnsLog
		{
			get
			{
				return this.GetTable<AnsLog>();
			}
		}
		
		public System.Data.Linq.Table<diqu_quXian> diqu_quXian
		{
			get
			{
				return this.GetTable<diqu_quXian>();
			}
		}
		
		public System.Data.Linq.Table<diqu_chengShi> diqu_chengShi
		{
			get
			{
				return this.GetTable<diqu_chengShi>();
			}
		}
		
		public System.Data.Linq.Table<AnsLog_2015> AnsLog_2015
		{
			get
			{
				return this.GetTable<AnsLog_2015>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AnsLog")]
	public partial class AnsLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AnsLogId;
		
		private string _shi;
		
		private string _xian;
		
		private string _zhen;
		
		private string _cun;
		
		private string _Ans;
		
		private string _Ip;
		
		private System.DateTime _AddTime;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAnsLogIdChanging(int value);
    partial void OnAnsLogIdChanged();
    partial void OnshiChanging(string value);
    partial void OnshiChanged();
    partial void OnxianChanging(string value);
    partial void OnxianChanged();
    partial void OnzhenChanging(string value);
    partial void OnzhenChanged();
    partial void OncunChanging(string value);
    partial void OncunChanged();
    partial void OnAnsChanging(string value);
    partial void OnAnsChanged();
    partial void OnIpChanging(string value);
    partial void OnIpChanged();
    partial void OnAddTimeChanging(System.DateTime value);
    partial void OnAddTimeChanged();
    #endregion
		
		public AnsLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnsLogId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AnsLogId
		{
			get
			{
				return this._AnsLogId;
			}
			set
			{
				if ((this._AnsLogId != value))
				{
					this.OnAnsLogIdChanging(value);
					this.SendPropertyChanging();
					this._AnsLogId = value;
					this.SendPropertyChanged("AnsLogId");
					this.OnAnsLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shi", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string shi
		{
			get
			{
				return this._shi;
			}
			set
			{
				if ((this._shi != value))
				{
					this.OnshiChanging(value);
					this.SendPropertyChanging();
					this._shi = value;
					this.SendPropertyChanged("shi");
					this.OnshiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xian", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string xian
		{
			get
			{
				return this._xian;
			}
			set
			{
				if ((this._xian != value))
				{
					this.OnxianChanging(value);
					this.SendPropertyChanging();
					this._xian = value;
					this.SendPropertyChanged("xian");
					this.OnxianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zhen", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string zhen
		{
			get
			{
				return this._zhen;
			}
			set
			{
				if ((this._zhen != value))
				{
					this.OnzhenChanging(value);
					this.SendPropertyChanging();
					this._zhen = value;
					this.SendPropertyChanged("zhen");
					this.OnzhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cun", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string cun
		{
			get
			{
				return this._cun;
			}
			set
			{
				if ((this._cun != value))
				{
					this.OncunChanging(value);
					this.SendPropertyChanging();
					this._cun = value;
					this.SendPropertyChanged("cun");
					this.OncunChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ans", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Ans
		{
			get
			{
				return this._Ans;
			}
			set
			{
				if ((this._Ans != value))
				{
					this.OnAnsChanging(value);
					this.SendPropertyChanging();
					this._Ans = value;
					this.SendPropertyChanged("Ans");
					this.OnAnsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ip", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ip
		{
			get
			{
				return this._Ip;
			}
			set
			{
				if ((this._Ip != value))
				{
					this.OnIpChanging(value);
					this.SendPropertyChanging();
					this._Ip = value;
					this.SendPropertyChanged("Ip");
					this.OnIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddTime", DbType="DateTime NOT NULL")]
		public System.DateTime AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this.OnAddTimeChanging(value);
					this.SendPropertyChanging();
					this._AddTime = value;
					this.SendPropertyChanged("AddTime");
					this.OnAddTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.diqu_quXian")]
	public partial class diqu_quXian : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _chengShi_id;
		
		private string _name;
		
		private EntityRef<diqu_chengShi> _diqu_chengShi;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnchengShi_idChanging(int value);
    partial void OnchengShi_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public diqu_quXian()
		{
			this._diqu_chengShi = default(EntityRef<diqu_chengShi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chengShi_id", DbType="Int NOT NULL")]
		public int chengShi_id
		{
			get
			{
				return this._chengShi_id;
			}
			set
			{
				if ((this._chengShi_id != value))
				{
					if (this._diqu_chengShi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnchengShi_idChanging(value);
					this.SendPropertyChanging();
					this._chengShi_id = value;
					this.SendPropertyChanged("chengShi_id");
					this.OnchengShi_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="diqu_chengShi_diqu_quXian", Storage="_diqu_chengShi", ThisKey="chengShi_id", OtherKey="id", IsForeignKey=true)]
		public diqu_chengShi diqu_chengShi
		{
			get
			{
				return this._diqu_chengShi.Entity;
			}
			set
			{
				diqu_chengShi previousValue = this._diqu_chengShi.Entity;
				if (((previousValue != value) 
							|| (this._diqu_chengShi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._diqu_chengShi.Entity = null;
						previousValue.diqu_quXian.Remove(this);
					}
					this._diqu_chengShi.Entity = value;
					if ((value != null))
					{
						value.diqu_quXian.Add(this);
						this._chengShi_id = value.id;
					}
					else
					{
						this._chengShi_id = default(int);
					}
					this.SendPropertyChanged("diqu_chengShi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.diqu_chengShi")]
	public partial class diqu_chengShi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<diqu_quXian> _diqu_quXian;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public diqu_chengShi()
		{
			this._diqu_quXian = new EntitySet<diqu_quXian>(new Action<diqu_quXian>(this.attach_diqu_quXian), new Action<diqu_quXian>(this.detach_diqu_quXian));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="diqu_chengShi_diqu_quXian", Storage="_diqu_quXian", ThisKey="id", OtherKey="chengShi_id")]
		public EntitySet<diqu_quXian> diqu_quXian
		{
			get
			{
				return this._diqu_quXian;
			}
			set
			{
				this._diqu_quXian.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_diqu_quXian(diqu_quXian entity)
		{
			this.SendPropertyChanging();
			entity.diqu_chengShi = this;
		}
		
		private void detach_diqu_quXian(diqu_quXian entity)
		{
			this.SendPropertyChanging();
			entity.diqu_chengShi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AnsLog_2015")]
	public partial class AnsLog_2015 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AnsLogId;
		
		private string _shi;
		
		private string _xian;
		
		private string _zhen;
		
		private string _cun;
		
		private string _zhiwu;
		
		private string _Ans;
		
		private string _jianyi;
		
		private string _Ip;
		
		private System.DateTime _AddTime;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAnsLogIdChanging(int value);
    partial void OnAnsLogIdChanged();
    partial void OnshiChanging(string value);
    partial void OnshiChanged();
    partial void OnxianChanging(string value);
    partial void OnxianChanged();
    partial void OnzhenChanging(string value);
    partial void OnzhenChanged();
    partial void OncunChanging(string value);
    partial void OncunChanged();
    partial void OnzhiwuChanging(string value);
    partial void OnzhiwuChanged();
    partial void OnAnsChanging(string value);
    partial void OnAnsChanged();
    partial void OnjianyiChanging(string value);
    partial void OnjianyiChanged();
    partial void OnIpChanging(string value);
    partial void OnIpChanged();
    partial void OnAddTimeChanging(System.DateTime value);
    partial void OnAddTimeChanged();
    #endregion
		
		public AnsLog_2015()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnsLogId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AnsLogId
		{
			get
			{
				return this._AnsLogId;
			}
			set
			{
				if ((this._AnsLogId != value))
				{
					this.OnAnsLogIdChanging(value);
					this.SendPropertyChanging();
					this._AnsLogId = value;
					this.SendPropertyChanged("AnsLogId");
					this.OnAnsLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shi", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string shi
		{
			get
			{
				return this._shi;
			}
			set
			{
				if ((this._shi != value))
				{
					this.OnshiChanging(value);
					this.SendPropertyChanging();
					this._shi = value;
					this.SendPropertyChanged("shi");
					this.OnshiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xian", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string xian
		{
			get
			{
				return this._xian;
			}
			set
			{
				if ((this._xian != value))
				{
					this.OnxianChanging(value);
					this.SendPropertyChanging();
					this._xian = value;
					this.SendPropertyChanged("xian");
					this.OnxianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zhen", DbType="NVarChar(150)")]
		public string zhen
		{
			get
			{
				return this._zhen;
			}
			set
			{
				if ((this._zhen != value))
				{
					this.OnzhenChanging(value);
					this.SendPropertyChanging();
					this._zhen = value;
					this.SendPropertyChanged("zhen");
					this.OnzhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cun", DbType="NVarChar(150)")]
		public string cun
		{
			get
			{
				return this._cun;
			}
			set
			{
				if ((this._cun != value))
				{
					this.OncunChanging(value);
					this.SendPropertyChanging();
					this._cun = value;
					this.SendPropertyChanged("cun");
					this.OncunChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zhiwu", DbType="NVarChar(300)")]
		public string zhiwu
		{
			get
			{
				return this._zhiwu;
			}
			set
			{
				if ((this._zhiwu != value))
				{
					this.OnzhiwuChanging(value);
					this.SendPropertyChanging();
					this._zhiwu = value;
					this.SendPropertyChanged("zhiwu");
					this.OnzhiwuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ans", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Ans
		{
			get
			{
				return this._Ans;
			}
			set
			{
				if ((this._Ans != value))
				{
					this.OnAnsChanging(value);
					this.SendPropertyChanging();
					this._Ans = value;
					this.SendPropertyChanged("Ans");
					this.OnAnsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jianyi", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string jianyi
		{
			get
			{
				return this._jianyi;
			}
			set
			{
				if ((this._jianyi != value))
				{
					this.OnjianyiChanging(value);
					this.SendPropertyChanging();
					this._jianyi = value;
					this.SendPropertyChanged("jianyi");
					this.OnjianyiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ip", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ip
		{
			get
			{
				return this._Ip;
			}
			set
			{
				if ((this._Ip != value))
				{
					this.OnIpChanging(value);
					this.SendPropertyChanging();
					this._Ip = value;
					this.SendPropertyChanged("Ip");
					this.OnIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddTime", DbType="DateTime NOT NULL")]
		public System.DateTime AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this.OnAddTimeChanging(value);
					this.SendPropertyChanging();
					this._AddTime = value;
					this.SendPropertyChanged("AddTime");
					this.OnAddTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
